


-- 1. Total Campaign Performance:

SELECT 
    SUM(AcceptedCmp1) AS Cmp1Total,
    SUM(AcceptedCmp2) AS Cmp2Total,
    SUM(AcceptedCmp3) AS Cmp3Total,
    SUM(AcceptedCmp4) AS Cmp4Total,
    SUM(AcceptedCmp5) AS Cmp5Total
FROM campaign_table;


-- 2. Total Response Rate Across All Campaigns:

SELECT 
    AVG(AcceptedCmpOverall)/COUNT(id)*100 AS TotalResponseRate
FROM campaign_table;



-- 3. Campaign Success Rates:

SELECT
    COUNT(id) AS TotalCustomersAsked,
    SUM(AcceptedCmp1) AS Cmp1Total,
    (SUM(AcceptedCmp1) / COUNT(id)) * 100 AS Cmp1SuccessRate,
    SUM(AcceptedCmp2) AS Cmp2Total,
    (SUM(AcceptedCmp2) / COUNT(id)) * 100 AS Cmp2SuccessRate,
    SUM(AcceptedCmp3) AS Cmp3Total,
    (SUM(AcceptedCmp3) / COUNT(id)) * 100 AS Cmp3SuccessRate,
    SUM(AcceptedCmp4) AS Cmp4Total,
    (SUM(AcceptedCmp4) / COUNT(id)) * 100 AS Cmp4SuccessRate,
    SUM(AcceptedCmp5) AS Cmp5Total,
    (SUM(AcceptedCmp5) / COUNT(id)) * 100 AS Cmp5SuccessRate
FROM campaign_table;


-- 4. Best Performing Platform for Selling Products:

SELECT 
        AVG(NumWebPurchases) AS avgwebpurchases,
	AVG(NumStorePurchases) AS avgstorepurchases,
        AVG(NumCatalogPurchases) AS avgcatalogpurchases
FROM product_orders_table;





-- 5. Characteristics of Customers Who Responded Positively to the Pilot Campaign:

SELECT 
	income, 
    Age, 
    CASE 
		WHEN Education_Graduation = 1 THEN "YES"
        WHEN Education_Master = 1 THEN "YES"
        WHEN Education_PhD = 1 THEN "YES"
		ELSE "NO" 
    END AS Above_Higher_Education,
	CASE
		WHEN Marital_Together = 1 THEN "YES"
        WHEN Marital_Married = 1 THEN "YES"
        ELSE "NO"
	END AS Partnered,
    CASE
		WHEN (kidhome + teenhome) > 2 THEN '>2'
        WHEN (kidhome + teenhome) <= 2 THEN '<=2'
	END AS Combined_Home_Count,
	mnttotal
FROM customer_table cust
JOIN Product_orders_table pot
	ON cust.id = pot.id
ORDER BY mnttotal DESC
LIMIT 10;




-- 6. Top 10 Customers with the Most Accepted Campaigns:


SELECT * 
FROM campaign_table camt
JOIN customer_table cust
	ON cust.id = camt.id
ORDER BY AcceptedCmpOverall DESC
LIMIT 10;


 
SELECT 
	AVG(age) AS AvgAge,
    cust.id,
    camt.AcceptedCmpOverall 
FROM campaign_table camt
JOIN customer_table cust
	ON cust.id = camt.id
LIMIT 10;


-- 7. Correlation Between Web Visit Frequency and Campaign Acceptance

SELECT 
	pot.NumWebVisitsMonth,
    camt.AcceptedCmpOverall 
FROM campaign_table camt
JOIN product_orders_table pot
	ON pot.id = camt.id
ORDER BY NumWebVisitsMonth DESC
lIMIT 10;

-- 8. Campaign Acceptance and Purchasing Behavior:

SELECT 
	acceptedcmpoverall,
	MntWines,
    MntFruits,
    MntMeatProducts,
    MntFishProducts,
    MntSweetProducts,
	MntGoldProds,
    NumDealsPurchases    
FROM campaign_table camt
JOIN product_orders_table pot
    ON pot.id = camt.id
ORDER BY acceptedcmpoverall DESC;



-- 9. Correlation Between TotalMnt and Campaign Acceptance:


SELECT 
	pot.NumWebVisitsMonth,
    camt.AcceptedCmpOverall 
FROM campaign_table camt
JOIN product_orders_table pot
	ON pot.id = camt.id
ORDER BY NumWebVisitsMonth DESC
lIMIT 10;

-- 10. Number of Customers with Higher Education vs. Non-Higher Education:

SELECT 
	SUM(Education_Master),
	SUM(Education_Graduation),
	SUM(Education_PhD), 
    SUM(Education_Master + Education_Graduation + Education_PhD) AS Highereducationtotal, 
    COUNT(id) - SUM(Education_Master + Education_Graduation + Education_PhD) AS NONHighereducationtotal
FROM customer_table;


